metadata:
  test_config: ${test_config}
  fvp_model: ${model}
  build_url: ${BUILD_URL}

$(if [ -n "${gerrit_url}" ]; then
	cat <<-YAML
  gerrit_url: "${gerrit_url}"
	YAML
fi)

device_type: fvp
job_name: fvp-linux-${test_config}

timeouts:
  connection:
    seconds: 10
  job:
    minutes: 30
  action:
    minutes: 20
  actions:
    auto-login-action:
      minutes: 5
    lava-test-monitor:
      minutes: 5
    lava-test-interactive:
      minutes: 15
    lava-test-shell:
      seconds: 300
    http-download:
      minutes: 2
    download-retry:
      minutes: 2
    fvp-deploy:
      minutes: 5

priority: medium
visibility: public

actions:
- deploy:
    to: fvp
    images:

$(for artefact in "${artefacts[@]:?}"; do
	cat <<-YAML
      ${artefact:?}:
        url: ${artefact_urls[${artefact}]:?}
	YAML

	[[ "${artefact:?}" =~ ^(busybox|rootfs)$ ]] && cat <<-YAML
        compression: gz
	YAML
done)

- boot:
    method: fvp
    license_variable: ARMLMD_LICENSE_FILE=${armlmd_license_file}
    docker:
      name: ${docker_name}
      local: true
    image: ${model_dir}/${model_bin}
    version_string: ${version_string}
    console_string: '${ports[$(get_payload_uart "${archive}")]:?}: Listening for serial connection on port (?P<PORT>\d+)'
    feedbacks:

$(for port in "${ports[@]}"; do
	if [ "${port}" = "${ports[$(get_payload_uart "${archive}")]}" ]; then
		continue
	fi

	cat <<-YAML
      - '(?P<NAME>${port}): Listening for serial connection on port (?P<PORT>\d+)'
	YAML
done)

    timeout:
      minutes: 30
    arguments:

$(for boot_argument in "${boot_arguments[@]:?}"; do
	cat <<-YAML
      - $(echo "${boot_argument}" | jq -R .)
	YAML
done)
