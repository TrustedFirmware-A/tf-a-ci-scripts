#!/usr/bin/env bash
#
# Copyright (c) 2024, Arm Limited. All rights reserved.
#
# SPDX-License-Identifier: BSD-3-Clause
#
source "$ci_root/run_config/tc_rse_utils.sh"

post_tf_build() {
	# Use SCP binary from SCP build if it exists, or fetch pre-built ones.
	if [ ! -f "$archive/scp_ram.bin" ]; then
		url="$scp_mcp_downloads/totalcompute/tc$plat_variant/platform_variant_0/release/tc$plat_variant-bl2.bin" saveas="scp_ram.bin" fetch_file
		archive_file "scp_ram.bin"
	fi

	build_fip BL33="$archive/tftf.bin" SCP_BL2="$archive/scp_ram.bin"
}

fetch_tf_resource() {
	# RSE output is printed to UART 2 so track it.
	uart="1" port="5003" file="hold_uart.exp" track_expect

	get_rse_prov_bins

	# sign AP bl1
	sign_image bl1.bin $ap_bl1_flash_load_addr $ap_bl1_flash_size

	# Update FIP with pre-built RSE binaries and signed AP BL1 to create host flash fip image
	update_fip

	# Create GPT image
	gen_gpt_bin $archive/host_flash_fip.bin 12582912 16
}

generate_lava_job_template() {
    uart="2" port="5000" set_primary="1" file="tftf-non-primary.exp" track_expect

    set_uart_port "${archive:?}" 0 5002
    set_uart_port "${archive:?}" 1 5003
    set_uart_port "${archive:?}" 2 5000
    set_uart_port "${archive:?}" 3 5001

    payload_type="tftf" memory_tagging_support_level="2" gen_yaml_template
}
